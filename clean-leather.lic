=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#clean-leather
=end

custom_require.call(%w[common common-crafting common-items common-money common-travel drinfomon])

class CleanLeather
  include DRC
  include DRCC
  include DRCI
  include DRCM
  include DRCT

  def initialize
    arg_definitions = [
      [
        { name: 'source', regex: /\w+/, description: 'bundle, container, etc' },
        { name: 'noun', regex: /\w+/, description: 'pelt, hide, skin, etc' },
        { name: 'storage', regex: /\w+/, optional: true, description: 'container to put them in, otherwise stow' },
        { name: 'speed', regex: /normal|quick|careful/i, optional: true, description: 'how quickly to scrape' }
      ]
    ]
    args = parse_args(arg_definitions)

    @settings = get_settings
    @bag = @settings.crafting_container
    @bag_items = @settings.crafting_items_in_container
    @belt = @settings.outfitting_belt

    @stock_room = args.noun =~ /^bones?$/i ? get_data('crafting')['engineering'][@settings.hometown]['tool-room'] : get_data('crafting')['tailoring'][@settings.hometown]['tool-room']

    ensure_copper_on_hand(2000, @settings)

    @preservative = args.noun =~ /^bones?$/i ? 'bleaching solution' : 'tanning lotion'
    @item = args.noun =~ /^bones?$/i ? '8' : '7'
    @speed = args.speed || ''

    @bag = @settings.crafting_items_in_container

    while bput("get #{args.noun} from my #{args.source}", 'You get', 'You carefully remove', 'What were you') != 'What were you'
      fput('stow left') if left_hand == 'bundling rope'
      fput('stow right') if right_hand == 'bundling rope'
      get_crafting_item('scraper', @bag, @bag_items, @belt)
      until bput("scrape #{args.noun} with my scraper #{@speed}", 'roundtime', 'looks as clean as you') == 'looks as clean as you'
        waitrt?
      end
      waitrt?
      stow_crafting_item('scraper', @bag, @belt)
      if bput("get my #{@preservative}", 'You get', 'What were you') == 'What were you'
        order_stow_lotion
      end
      bput("pour #{@preservative} on my #{args.noun}", 'roundtime')
      waitrt?

      if @bag.nil?
        fput("stow my #{@preservative}")
      else
        fput("put my #{@preservative} in my #{@bag}")
      end

      if args.storage
        fput("put my #{args.noun} in my #{args.storage}")
      else
        fput("stow my #{args.noun}")
      end
    end
  end

  def order_stow_lotion
    walk_to(@stock_room)
    DRCT.order_item(@stock_room, @item)
  end
end

CleanLeather.new
