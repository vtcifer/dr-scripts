=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#gbox
=end

custom_require.call(%w[common common-items equipmanager events])

class GiveBoxes
  include DRC

  def initialize
    arg_definitions = [
      [
        { name: 'container', regex: /\w+/i, variable: true, description: 'Name of the container to get boxes from' },
        { name: 'player', regex: /\w+/i, variable: true, description: 'Name of the player to give boxes to' }
      ]
    ]

    args = parse_args(arg_definitions)

    Flags.add('give-accepted', '.* has accepted your offer and is now holding .*')
    Flags.add('give-declined', '.* has declined the offer')
    Flags.add('give-expired', 'Your offer to .* has expired')

    EquipmentManager.new.empty_hands
    DRCI.get_box_list_in_container(args.container).each { |item| hand_over(args.container, item, args.player) }
  end

  def hand_over(container, item, person)
    fput("get my #{item} from my #{container}")

    Flags.reset('give-accepted')
    Flags.reset('give-expired')
    Flags.reset('give-declined')
    DRC.bput("give #{item} to #{person}", '^You offer your .* to')
    pause 0.5 until Flags['give-accepted'] || Flags['give-expired'] || Flags['give-declined']

    return unless Flags['give-expired'] || Flags['give-declined']

    bput('stow right', 'You put')
    exit
  end
end

before_dying do
  Flags.delete('give-accepted')
  Flags.delete('give-expired')
  Flags.delete('give-declined')
end

GiveBoxes.new
