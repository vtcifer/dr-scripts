=begin
  Documentation: https://elanthipedia.play.net/Lich_script_development#events
=end

no_kill_all
no_pause_all

setpriority(0)

class Flags
  @@flags = {}
  @@matchers = {}

  def self.[](key)
    @@flags[key]
  end

  def self.[]=(key, value)
    @@flags[key] = value
  end

  def self.add(key, *matchers)
    @@flags[key] = false
    @@matchers[key] = matchers.map { |item| item.is_a?(Regexp) ? item : /#{item}/i }
  end

  def self.reset(key)
    @@flags[key] = false
  end

  def self.delete(key)
    @@matchers.delete key
    @@flags.delete key
  end

  def self.flags
    @@flags
  end

  def self.matchers
    @@matchers
  end
end

events_action = proc do |server_string|
  Flags.matchers.each do |key, regexes|
    regexes.each do |regex|
      if matches = server_string.match(regex)
        Flags.flags[key] = matches
        break
      end
    end
  end
  server_string
end

DownstreamHook.remove('events_action')
DownstreamHook.add('events_action', events_action)

before_dying do
  DownstreamHook.remove('events_action')
end

until script.gets.nil?
  # Keep script alive while game is connected
  # so that we continue to receive and parse data.
end
