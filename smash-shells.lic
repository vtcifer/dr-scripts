=begin
  Documentation: https://elanthipedia.play.net/Lich_script_repository#smash-shells
=end

custom_require.call(%w[events common-items common-travel common])

Flags.add('shell-fragments', 'shell explodes')

settings = get_settings
trash_items = settings.hollow_eve_junk.map { |x| /\b#{x}\b/i }
hollow_eve_loot_container = settings.hollow_eve_loot_container

DRC.message("*** Heading to grab a shell ***")

loop do
  break if checkbleeding
  break if checkhealth < 50
  DRCT.walk_to(16_236)
  until checkright || checkleft
    DRC.fix_standing
    case DRC.bput('grab box', 'roundtime', 'You are too injured', 'Perhaps that would work better', 'when you have enough coins', 'You should clean your hands')
    when 'You are too injured', 'You should clean your hands'
      DRC.message("*** You are too injured to play! Go get some healing! ***")
      DRCT.walk_to(16_150)
      exit
    when 'when you have enough coins'
      DRC.message("*** Out of money. Getting more! ***")
      DRCT.walk_to(16_315)
      case DRC.bput('withdraw 3 platinum', 'we are not lending money at this time', 'The clerk counts out')
      when 'we are not lending money at this time'
        exit
      end
      DRCT.walk_to(16_236)
    end
    pause 1
    waitrt?
  end

  DRCT.walk_to(16_237)

  case DRC.bput('break my shell', 'The shell', 'Break what', 'need a free hand', 'You should hold')
  when 'need a free hand', 'Break what'
    DRCI.stow_hands
  end
  pause

  [DRC.left_hand, DRC.right_hand]
  .compact
  .each do |in_hand|
    if in_hand
      case in_hand
      when *trash_items
        DRC.bput("put my #{in_hand} in bucket", 'You put', 'You drop', 'What were', 'Stow what?')
      else
        # Coil rope so we can store it
        if /\brope\b/ =~ in_hand
          fput("coil my #{in_hand}")
        end
        if !DRCI.put_away_item?(in_hand, hollow_eve_loot_container)
          DRC.message("*** The item is either too big to fit or no more room in the container(s)! ***")
          DRC.beep
          exit
        end
      end
    end
  end

  waitrt?
  next unless Flags['shell-fragments']
  pause 4
  DRC.wait_for_script_to_complete('tendme')
  #pause 20
  #DRC.wait_for_script_to_complete('tendme')
  Flags.reset('shell-fragments')
end

DRCT.walk_to(16_150)

before_dying do
  Flags.delete('shell-fragments')
end
