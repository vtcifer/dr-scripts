=begin
Documentation: https://elanthipedia.play.net/Lich_script_repository#titlecheck
=end

custom_require.call %w[common]

class TitleCheck
  def initialize
    arg_definitions = [
      [
        { name: 'title_set', options: %w[blunt ranged brawling genedged specedged thrown pole shield slings weapons weaponmaster performer primarymagic magic money ownership survival1 survival2 survival3 lore criminal generic racial premium order religion novice practitioner dilettante aficionado adept expert professional authority genius savant master grandmaster guru legend cleric trader warmage necromancer empath ranger paladin bard barbarian thief moonmage], description: 'What set of titles are you checking?' },
        { name: 'all', regex: /all/, optional: true, description: 'List all titles in the set'},
        { name: 'sort', regex: /sort/, optional: true, description: 'Sort titles alphabetically'}
      ]
    ]
    args = parse_args(arg_definitions)
    UserVars.titles ||= {}
    titles = parse_titles(args.title_set)

    if args.sort
       titles = titles.sort_by { |title| title }
    end

    if args.all
      print_titles(titles, 'titles')
    else
      new_titles = check_existing(args.title_set, titles)
      print_titles(new_titles, 'new titles')
    end
  end

  def print_titles(titles, descriptor)
    respond '-' * 10
    respond 'Title Check'
    respond '-' * 10
    if titles.empty?
      respond "You have no #{descriptor}"
    else
      respond "You have the following #{descriptor}: "
      titles.each { |title| respond title }
    end
    respond '-' * 10
  end

  def check_existing(title_set, current_titles)
    previous_titles = []
    if UserVars.titles[title_set]
      previous_titles = UserVars.titles[title_set]
      UserVars.titles[title_set] = previous_titles + (current_titles - previous_titles)
    else
      UserVars.titles[title_set] = current_titles
    end
    current_titles - previous_titles
  end

  def parse_titles(title_set)
    res = DRC.bput("title pre list #{title_set}", 'There are no titles', 'I could not find that category', 'The following (titles)')
    pause 0.25
    if res =~ /The following titles/
      lines = reget(50).reverse
      title_line_index = lines.find_index { |line| line.match('The following titles') } - 1
      title_line = lines[title_line_index]
      return title_line.chomp.split(',').map(&:strip)
    elsif res =~ /There are no titles/
      return []
    else
      echo 'Something went wrong'
      exit
    end
  end
end

TitleCheck.new
